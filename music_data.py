# -*- coding: utf-8 -*-
"""Music_Data.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1lganIhYgc5Ng2rzZKyURUTkCyKiIdk3p
"""

!pip install Spotipy

import pandas as pd
import numpy as np
import spotipy
import spotipy.util as util
from spotipy.oauth2 import SpotifyClientCredentials
import spotipy.oauth2 as oauth2

SPOTIPY_CLIENT_ID = "ba0aefea59a44616bc6703a7294d312d"
SPOTIPY_CLIENT_SECRET = "989d552704124fe086005b3851f5a94b"
redirect_uri='http://localhost:8080/callback/'

client_credentials_manager = SpotifyClientCredentials(client_id=SPOTIPY_CLIENT_ID, client_secret=SPOTIPY_CLIENT_SECRET)
sp = spotipy.Spotify(client_credentials_manager=client_credentials_manager)

from google.colab import files
uploaded = files.upload()

names = pd.read_csv("Artists - Sheet1.csv")
names

names_df =  pd.DataFrame({'artists' : ["Led Zeppelin","Queen","Rush","Pink Floyd","AC/DC","The Beatles","Black Sabbath","The Rolling Stones","Metallica","Iron Maiden",
"Deep Purple","Guns N' Roses","Who","Def Leppard","Van Halen","Kiss","Aerosmith","Eagles","Yes","Jimi Hendrix","Bob Dylan","Thin Lizzy","David Bowie","Bon Jovi","U2",
"Foo Fighters","Motorhead","Genesis","Judas Priest","Nirvana","Fleetwood Mac","Tool","Bruce Springsteen","Slade","Lynyrd Skynyrd","The Doors","Creedence Clearwater Revival",
"Chicago","Uriah Heep","Status Quo","Marillion","Pearl Jam","Rainbow","Motley Crue","Cream","Journey","Ramones","ZZ Top","King Crimson","Roxy Music"]})

names_df['artists'].astype(str)

for artst in names_df.iterrows():
  print(artst)
  results = sp.search(q='artist:' + artst[1], limit=20)
  for idx, track in enumerate(results['tracks']['items']):
    print(idx, track['name'])

for artst in names_df.iterrows():
  result = sp.search(q='artist:' + artst[1]) 
  fin_result = result['tracks']['items'][0]['artists']
  artist_uri = fin_result[0]['uri']
  print(fin_result)
  print(artist_uri)

from google.colab import files
uploaded = files.upload()

artist_uri = pd.read_csv("Artist_URI - Sheet1.csv")
artist_uri

artists_uri_ls = ["36QJpDe2go2KgaRleHCDTp",
"1dfeR4HaWDbWqFHLkxsg1d",
"2Hkut4rAAyrQxRdof7FVJq",
"0k17h0D3J5VfsdmQ1iZtE9",
"711MCceyCBcFnzjGY4Q7Un",
"3WrFJ7ztbogyGnTHbHJFl2",
"5M52tdBnJaKSvOpJGz8mfZ",
"22bE4uQ6baNwSHPVcDxLCe",
"2ye2Wgw4gimLv2eAKyk1NB",
"6mdiAmATAx73kdxrNrnlao",
"568ZhdwyaiCyOGJRtNYhWf",
"3qm84nBOXUEQ2vnTfUTTFC",
"67ea9eGLXYMsO2eYQRui3w",
"6H1RjVyNruCmrBEWRbD0VZ",
"2cnMpRsOVqtPMfq7YiFE6K",
"07XSN3sPlIlB2L2XNcTwJw",
"7Ey4PD4MYsKc5I2dolUwbH",
"0ECwFtbIWEVNwjlrfc6xoL",
"7AC976RDJzL2asmZuz7qil",
"776Uo845nYHJpNaStv1Ds4",
"74ASZWbe4lXaubB36ztrGX",
"6biWAmrHyiMkX49LkycGqQ",
"0oSGxfWSnnOXhD2fKuz2Gy",
"58lV9VcRSjABbAbfWS6skp",
"51Blml2LZPmy7TTiAg47vQ",
"7jy3rLJdDQY21OgRLCZ9sD",
"1DFr97A9HnbV3SKTJFu62M",
"3CkvROUTQ6nRi9yQOcsB50",
"2tRsMl4eGxwoNabM08Dm4I",
"6olE6TJLqED3rqDCT0FyPh",
"08GQAI4eElDnROBrJRGE0X",
"2yEwvVSSSUkcLeSTNyHKh8",
"3eqjTLE0HfPfh78zjh6TqT",
"10n5lhNDoSMUHWLlnST1yw",
"4MVyzYMgTwdP7Z49wAZHx0",
"22WZ7M8sxp5THdruNY3gXt",
"3IYUhFvPQItj6xySrBmZkd",
"3iDD7bnsjL9J4fO298r0L0",
"45O9BwPMyywM755SYUK0sP",
"4gIdjgLlvgEOz7MexDZzpM",
"7ai5TWiOG8g9Hds5AATS28",
"1w5Kfo2jwwIPruYS2UWh56",
"6SLAMfhOi7UJI0fMztaK0m",
"0cc6vw3VN8YlIcvr1v7tBL",
"74oJ4qxwOZvX6oSsu1DGnw",
"0rvjqX7ttXeg3mTy8Xscbt",
"1co4F2pPNH8JjTutZkmgSm",
"2AM4ilv6UzW0uMRuqKtDgN",
"7M1FPw29m5FbicYzS2xdpi",
"3fhOTtm0LBJ3Ojn4hIljLo"]

all_artst_lst_albm = []
for artst_uri in artists_uri_ls:
  sp_albums = sp.artist_albums(artst_uri, album_type='album', limit=15)
  print(sp_albums)
  all_artst_lst_albm.append(sp_albums)

print(all_artst_lst_albm[4])
sp_albums = all_artst_lst_albm[4]

sgl_album_names = []
sgl_album_uris = []
for i in range(len(sp_albums['items'])):
    sgl_album_names.append(sp_albums['items'][i]['name'])
    sgl_album_uris.append(sp_albums['items'][i]['uri'])    
sgl_album_names

sgl_album_uris

def SongsInalbum(uri):
    album = uri 
    spotify_albums[album] = {} 
    spotify_albums[album]['album'] = [] 
    spotify_albums[album]['track_number'] = []
    spotify_albums[album]['id'] = []
    spotify_albums[album]['name'] = []
    spotify_albums[album]['uri'] = []
    spotify_albums[album]['duration_ms'] = []
    tracks = sp.album_tracks(album) 
    for n in range(len(tracks['items'])):
            spotify_albums[album]['album'].append(sgl_album_names[album_count]) 
            spotify_albums[album]['track_number'].append(tracks['items'][n]['track_number'])
            spotify_albums[album]['id'].append(tracks['items'][n]['id'])
            spotify_albums[album]['name'].append(tracks['items'][n]['name'])
            spotify_albums[album]['uri'].append(tracks['items'][n]['uri'])
            spotify_albums[album]['duration_ms'].append(tracks['items'][n]['duration_ms'])

spotify_albums = {}
album_count = 0
for i in sgl_album_uris: 
    SongsInalbum(i)
    print("Album - " + str(sgl_album_names[album_count]))
    album_count+=1

def audio_features(album):
    spotify_albums[album]['acousticness'] = []
    spotify_albums[album]['danceability'] = []
    spotify_albums[album]['energy'] = []
    spotify_albums[album]['instrumentalness'] = []
    spotify_albums[album]['liveness'] = []
    spotify_albums[album]['loudness'] = []
    spotify_albums[album]['speechiness'] = []
    spotify_albums[album]['tempo'] = []
    spotify_albums[album]['valence'] = []
    spotify_albums[album]['popularity'] = []
    
    track_count = 0
    for track in spotify_albums[album]['uri']:
        
        features = sp.audio_features(track)
        spotify_albums[album]['acousticness'].append(features[0]['acousticness'])
        spotify_albums[album]['danceability'].append(features[0]['danceability'])
        spotify_albums[album]['energy'].append(features[0]['energy'])
        spotify_albums[album]['instrumentalness'].append(features[0]['instrumentalness'])
        spotify_albums[album]['liveness'].append(features[0]['liveness'])
        spotify_albums[album]['loudness'].append(features[0]['loudness'])
        spotify_albums[album]['speechiness'].append(features[0]['speechiness'])
        spotify_albums[album]['tempo'].append(features[0]['tempo'])
        spotify_albums[album]['valence'].append(features[0]['valence'])
        
        pop = sp.track(track)
        spotify_albums[album]['popularity'].append(pop['popularity'])
        track_count+=1

import time
for i in spotify_albums:
    time.sleep(.5)
    audio_features(i)

dic_df = {}
dic_df['album'] = []
dic_df['track_number'] = []
dic_df['id'] = []
dic_df['name'] = []
dic_df['uri'] = []
dic_df['duration_ms'] = []
dic_df['acousticness'] = []
dic_df['danceability'] = []
dic_df['energy'] = []
dic_df['instrumentalness'] = []
dic_df['liveness'] = []
dic_df['loudness'] = []
dic_df['speechiness'] = []
dic_df['tempo'] = []
dic_df['valence'] = []
dic_df['popularity'] = []
for album in spotify_albums: 
    for feature in spotify_albums[album]:
        dic_df[feature].extend(spotify_albums[album][feature])
      
len(dic_df['album'])

dic_df

len(dic_df['acousticness'])

df = {'album': [], 'track_number': [], 'id': [], 'name': [], 'uri': [], 'duration_ms' : [], 'acousticness': [], 'danceability': [], 'energy': [], 'instrumentalness': [], 'liveness': [],
      'loudness': [], 'speechiness': [], 'tempo': [], 'valence': [], 'popularity': []}
df = pd.DataFrame.from_dict(dic_df)
df

df = df.drop_duplicates('id')
final_df = df.sort_values('popularity', ascending=False).sort_index()
final_df

from google.colab import files
final_df.to_csv('music.csv') 
files.download('music.csv')